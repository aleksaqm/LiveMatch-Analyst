package basicrules;

import com.ftn.sbnz.model.events.GameEvent;
import com.ftn.sbnz.model.events.GameEvent.EventType;
import com.ftn.sbnz.model.models.PlayerStats;
import com.ftn.sbnz.model.models.Player;
import com.ftn.sbnz.model.models.Team;
import com.ftn.sbnz.model.models.CommentaryLine;
import com.ftn.sbnz.model.models.CommentaryLine.Importance;
import com.ftn.sbnz.model.models.CommentaryLine.Type;

rule "FreeThrowMadeComment"
when
    $event: GameEvent(eventType == EventType.SHOT_MADE, details["points"] == 1, $playerId: playerId, $teamId: teamId)
    $player: Player(id == $playerId, $playerName: name)
    $team: Team(id == $teamId, $teamName: name)
    $stats: PlayerStats(playerId == $playerId)
then
    modify($stats){
        setFreeThrowsMade($stats.getFreeThrowsMade() + 1),
        setFreeThrowAttempted($stats.getFreeThrowAttempted() + 1),
        setPoints($stats.getPoints() + 1)
    }
    modify($event){
        setProcessed(true)
    }
    
    insert(new CommentaryLine("Slobodno bacanje! " + $playerName + " iz tima " + $teamName + " je pogodio slobodno bacanje!", Importance.LOW, Type.PLAY_BY_PLAY));
end

rule "FreeThrowMissedComment"
when
    $event: GameEvent(eventType == EventType.SHOT_MISSED, details["points"] == 1, $playerId: playerId, $teamId: teamId)
    $player: Player(id == $playerId, $playerName: name)
    $team: Team(id == $teamId, $teamName: name)
    $stats: PlayerStats(playerId == $playerId)
then
    modify($stats){
        setFreeThrowAttempted($stats.getFreeThrowAttempted() + 1)
    }
    modify($event){
        setProcessed(true)
    }
    
    insert(new CommentaryLine($playerName + " iz tima " + $teamName + " je promašio slobodno bacanje.", Importance.LOW, Type.PLAY_BY_PLAY));
end

rule "FieldGoalMadeComment"
when
    $event: GameEvent(eventType == EventType.SHOT_MADE, details["points"] == 2, $playerId: playerId, $teamId: teamId)
    $player: Player(id == $playerId, $playerName: name)
    $team: Team(id == $teamId, $teamName: name)
    $stats: PlayerStats(playerId == $playerId)
then
    modify($stats){
        setFieldGoalsMade($stats.getFieldGoalsMade() + 1),
        setFieldGoals($stats.getFieldGoals() + 1),
        setPoints($stats.getPoints() + 2)
    }
    modify($event){
        setProcessed(true)
    }

    String shotTypeText = "šut";
    if ($event.getDetails().containsKey("shotType")) {
        shotTypeText = (String) $event.getDetails().get("shotType");
    }
    insert(new CommentaryLine("Pogodak! " + $playerName + " iz tima " + $teamName + " je pogodio " + shotTypeText + " za 2 poena!", Importance.LOW, Type.PLAY_BY_PLAY));
end

rule "FieldGoalMissedComment"
when
    $event: GameEvent(eventType == EventType.SHOT_MISSED, details["points"] == 2, $playerId: playerId, $teamId: teamId)
    $player: Player(id == $playerId, $playerName: name)
    $team: Team(id == $teamId, $teamName: name)
    $stats: PlayerStats(playerId == $playerId)
then
    modify($stats){
        setFieldGoals($stats.getFieldGoals() + 1)
    }
    modify($event){
        setProcessed(true)
    }
    
    String shotTypeText = "šut";
    if ($event.getDetails().containsKey("shotType")) {
        shotTypeText = (String) $event.getDetails().get("shotType");
    }
    
    insert(new CommentaryLine($playerName + " iz tima " + $teamName + " je promašio " + shotTypeText + " za 2.", Importance.LOW, Type.PLAY_BY_PLAY));
end

rule "ReboundComment"
when
    $event: GameEvent(eventType == EventType.REBOUND, $playerId: playerId, $teamId: teamId)
    $player: Player(id == $playerId, $playerName: name)
    $team: Team(id == $teamId, $teamName: name)
    $stats: PlayerStats(playerId == $playerId)
then
    modify($stats){
        setRebounds($stats.getRebounds() + 1)
    }
    modify($event){
        setProcessed(true)
    }
    
    insert(new CommentaryLine("Skok! " + $playerName + " iz tima " + $teamName + " je uhvatio skok! To mu je " + ($stats.getRebounds()) + ". skok u meču.", Importance.LOW, Type.PLAY_BY_PLAY));
end

rule "StealComment"
when
    $event: GameEvent(eventType == EventType.STEAL, $playerId: playerId, $teamId: teamId)
    $player: Player(id == $playerId, $playerName: name)
    $team: Team(id == $teamId, $teamName: name)
    $stats: PlayerStats(playerId == $playerId)
then
    modify($stats){
        setSteals($stats.getSteals() + 1)
    }
    modify($event){
        setProcessed(true)
    }
    
    insert(new CommentaryLine("Ukradena lopta! " + $playerName + " iz tima " + $teamName + " je ukrao loptu! To mu je " + ($stats.getSteals()) + ". ukradena na meču.", Importance.MEDIUM, Type.PLAY_BY_PLAY));
end

rule "BlockComment"
when
    $event: GameEvent(eventType == EventType.BLOCK, $playerId: playerId, $teamId: teamId)
    $player: Player(id == $playerId, $playerName: name)
    $team: Team(id == $teamId, $teamName: name)
    $stats: PlayerStats(playerId == $playerId)
then
    modify($stats){
        setBlocks($stats.getBlocks() + 1)
    }
    modify($event){
        setProcessed(true)
    }
    
    insert(new CommentaryLine("Rampa! " + $playerName + " iz tima " + $teamName + " je blokirao šut! To mu je " + ($stats.getBlocks()) + ". blokada na meču.", Importance.MEDIUM, Type.PLAY_BY_PLAY));
end

rule "TurnoverComment"
when
    $event: GameEvent(eventType == EventType.TURNOVER, $playerId: playerId, $teamId: teamId)
    $player: Player(id == $playerId, $playerName: name)
    $team: Team(id == $teamId, $teamName: name)
    $stats: PlayerStats(playerId == $playerId)
then
    modify($stats){
        setTurnovers($stats.getTurnovers() + 1)
    }
    modify($event){
        setProcessed(true)
    }
    
    insert(new CommentaryLine("Greška! " + $playerName + " iz tima " + $teamName + " je izgubio loptu.", Importance.LOW, Type.PLAY_BY_PLAY));
end

rule "ThreePointerMadeComment"
when
    $event: GameEvent(eventType == EventType.SHOT_MADE, details["points"] == 3, $playerId: playerId, $teamId: teamId)
    $player: Player(id == $playerId, $playerName: name)
    $team: Team(id == $teamId, $teamName: name)
    $stats: PlayerStats(playerId == $playerId)
then
    modify($stats){
        setThreePointersMade($stats.getThreePointersMade() + 1),
        setThreePointersAttempted($stats.getThreePointersAttempted() + 1),
        setPoints($stats.getPoints() + 3)
    }
    modify($event){
        setProcessed(true)
    }
    
    insert(new CommentaryLine("Trojka! " + $playerName + " iz tima " + $teamName + " je pogodio trojku!", Importance.LOW, Type.PLAY_BY_PLAY));
end

rule "ThreePointerMissedComment"
when
    $event: GameEvent(eventType == EventType.SHOT_MISSED, details["points"] == 3, $playerId: playerId, $teamId: teamId)
    $player: Player(id == $playerId, $playerName: name)
    $team: Team(id == $teamId, $teamName: name)
    $stats: PlayerStats(playerId == $playerId)
then
    modify($stats){
        setThreePointersAttempted($stats.getThreePointersAttempted() + 1)
    }
    modify($event){
        setProcessed(true)
    }
    
    insert(new CommentaryLine($playerName + " iz tima " + $teamName + " je promašio trojku.", Importance.LOW, Type.PLAY_BY_PLAY));
end

rule "AssistComment"
when
    $event: GameEvent(eventType == EventType.ASSIST, $playerId: playerId, $teamId: teamId)
    $player: Player(id == $playerId, $playerName: name)
    $team: Team(id == $teamId, $teamName: name)
    $stats: PlayerStats(playerId == $playerId)
then
    modify($stats){
        setAssists($stats.getAssists() + 1)
    }
    modify($event){
        setProcessed(true)
    }
    
    insert(new CommentaryLine("Asistencija od " + $playerName + " iz tima " + $teamName + "! To mu je " + ($stats.getAssists()) + ". asistencija u meču.", Importance.LOW, Type.PLAY_BY_PLAY));
end

rule "FoulComment"
when
    $event: GameEvent(eventType == EventType.FOUL, $playerId: playerId, $teamId: teamId)
    $player: Player(id == $playerId, $playerName: name)
    $team: Team(id == $teamId, $teamName: name)
    $stats: PlayerStats(playerId == $playerId)
then
    modify($stats){
        setFouls($stats.getFouls() + 1)
    }
    modify($event){
        setProcessed(true)
    }
    
    insert(new CommentaryLine("Faul! " + $playerName + " iz tima " + $teamName + " je napravio faul. To mu je " + ($stats.getFouls()) + ". faul u meču.", Importance.LOW, Type.PLAY_BY_PLAY));
end